openapi: 3.0.1
info:
  title: Customer Management API
  description: A RESTful API for managing customer data
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /customer:
    post:
      summary: Create a new customer
      operationId: createCustomer
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer_input'
            example:
              full_name: "Jane Smith"
              preferred_name: "Janie"
              email_address: "jane.smith@example.com"
              phone_number: "+19876543210"
      responses:
        '201':
          description: Customer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
              example:
                id: "custman:customer:123e4567-e89b-12d3-a456-426614174000"
                full_name: "Jane Smith"
                preferred_name: "Janie"
                email_address: "jane.smith@example.com"
                phone_number: "+19876543210"
  /customer/{id}:
    put:
      summary: Update a customer by ID
      operationId: updateCustomer
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/customer_id'
          description: "The namespaced ID of the customer to update (format: custman:customer:{uuid})"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer_input'
            example:
              full_name: "John Doe"
              preferred_name: "Johnny"
              email_address: "john.doe@update.com"
              phone_number: "+1234567890"
      responses:
        '200':
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
              example:
                id: "custman:customer:123e4567-e89b-12d3-a456-426614174000"
                full_name: "John Doe"
                preferred_name: "Johnny"
                email_address: "john.doe@update.com"
                phone_number: "+1234567890"
    get:
      summary: Get a customer by ID
      operationId: getCustomerById
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/customer_id'
          description: "The namespaced ID of the customer to retrieve (format: custman:customer:{uuid})"
      responses:
        '200':
          description: Customer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
              example:
                id: "custman:customer:123e4567-e89b-12d3-a456-426614174000"
                full_name: "John Doe"
                preferred_name: "Johnny"
                email_address: "john.doe@example.com"
                phone_number: "+1234567890"
components:
  schemas:
    customer_id:
      type: string
      description: "Unique namespaced identifier for the customer (format: custman:customer:{uuid})"
      pattern: '^custman:customer:[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
      example: "custman:customer:123e4567-e89b-12d3-a456-426614174000"
    customer:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/customer_id'
        full_name:
          type: string
          description: The full name of the customer
        preferred_name:
          type: string
          description: The preferred name of the customer
        email_address:
          type: string
          description: The email address of the customer
          pattern: '^[^@\s]+@[^@\s]+\.[^@\s]+$'
        phone_number:
          type: string
          description: The phone number of the customer
          pattern: '^\+?[1-9]\d{1,14}$'
    customer_input:
      type: object
      properties:
        full_name:
          type: string
          description: The full name of the customer
        preferred_name:
          type: string
          description: The preferred name of the customer
        email_address:
          type: string
          description: The email address of the customer
          pattern: '^[^@\s]+@[^@\s]+\.[^@\s]+$'
        phone_number:
          type: string
          description: The phone number of the customer
          pattern: '^\+?[1-9]\d{1,14}$'
