version: '3.9'

services:
  database:
    image: postgres:15-alpine
    container_name: customer_db
    environment:
      POSTGRES_USER: customer_user
      POSTGRES_PASSWORD: customer_pass
      POSTGRES_DB: customer_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U customer_user -d customer_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  flyway-migration:
    image: maven:3.9.5-eclipse-temurin-21
    container_name: maven_flyway_migration
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - ~/.m2:/root/.m2
    working_dir: /usr/src/app
    command: [ "mvn", "flyway:migrate", "-P", "flyway" ]

  jooq-codegen:
    image: maven:3.8.8-eclipse-temurin-17
    container_name: maven_jooq_codegen
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - .:/app
      - ~/.m2:/root/.m2
    working_dir: /app
    entrypoint: ["mvn", "generate-sources", "-P", "jooq-codegen"]

  maven-install:
    image: maven:3.9.5-eclipse-temurin-21
    container_name: maven_install_service
    volumes:
      - .:/usr/src/app
      - ~/.m2:/root/.m2
    working_dir: /usr/src/app
    command: [ "mvn", "clean", "install" ]

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: customer_management_app
    ports:
      - "8080:8080"

volumes:
  postgres_data:
